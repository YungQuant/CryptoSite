{"ast":null,"code":"var _jsxFileName = \"/Users/yungquant/CryptoSite/obook/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    const tickers = ['XBTUSD'];\n    var plots = {};\n    var ticks = {};\n    var tvals = {};\n\n    for (var i = 0; i < tickers.length; i++) {\n      plots[tickers[i]] = [];\n      ticks[tickers[i]] = [];\n      tvals[tickers[i]] = [];\n    }\n\n    this.state = {\n      response: false,\n      endpoint: \"ws://localhost:5678\",\n      plotter: plots,\n      xticks: ticks,\n      tickvl: tvals\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = this.state.endpoint;\n    const socket = new WebSocket(endpoint);\n\n    socket.onmessage = evt => {\n      this.setState({\n        response: evt.data\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          response = _this$state.response,\n          plotter = _this$state.plotter,\n          xticks = _this$state.xticks,\n          tickvl = _this$state.tickvl;\n    const data = JSON.parse(response);\n    const symbol = data['Symbol'];\n    plotter[symbol] = data['Data'];\n    xticks[symbol] = data['X'];\n    tickvl[symbol] = data['TV'];\n    const XBTA = \"XBTUSD\";\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        z: plotter[XBTA],\n        colorscale: 'Jet',\n        type: 'surface'\n      }],\n      layout: {\n        width: 1350,\n        height: 800,\n        autosize: true,\n        title: {\n          text: XBTA,\n          font: {\n            color: '#bcbd22'\n          }\n        },\n        margin: {\n          l: 65,\n          r: 50,\n          b: 65,\n          t: 90\n        },\n        paper_bgcolor: 'black',\n        scene: {\n          bgcolor: 'black',\n          xaxis: {\n            ticktext: xticks[XBTA],\n            title: '',\n            titlefont: {\n              color: 'black'\n            },\n            tickfont: {\n              color: '#bcbd22'\n            }\n          },\n          yaxis: {\n            title: '',\n            titlefont: {\n              color: 'black'\n            },\n            tickfont: {\n              color: '#bcbd22'\n            }\n          },\n          zaxis: {\n            title: '',\n            titlefont: {\n              color: 'black'\n            },\n            tickfont: {\n              color: '#bcbd22'\n            }\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yungquant/CryptoSite/obook/src/App.js"],"names":["React","Component","Fragment","Plot","Tab","Tabs","TabList","TabPanel","App","constructor","tickers","plots","ticks","tvals","i","length","state","response","endpoint","plotter","xticks","tickvl","componentDidMount","socket","WebSocket","onmessage","evt","setState","data","render","JSON","parse","symbol","XBTA","z","colorscale","type","width","height","autosize","title","text","font","color","margin","l","r","b","t","paper_bgcolor","scene","bgcolor","xaxis","ticktext","titlefont","tickfont","yaxis","zaxis"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,GAAG;AACZ;AAEA,UAAMC,OAAO,GAAG,CAAC,QAAD,CAAhB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,OAAO,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrCH,MAAAA,KAAK,CAACD,OAAO,CAACI,CAAD,CAAR,CAAL,GAAoB,EAApB;AACAF,MAAAA,KAAK,CAACF,OAAO,CAACI,CAAD,CAAR,CAAL,GAAoB,EAApB;AACAD,MAAAA,KAAK,CAACH,OAAO,CAACI,CAAD,CAAR,CAAL,GAAoB,EAApB;AACD;;AAED,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE,qBAFC;AAGXC,MAAAA,OAAO,EAAER,KAHE;AAIXS,MAAAA,MAAM,EAAER,KAJG;AAKXS,MAAAA,MAAM,EAAER;AALG,KAAb;AAOD;;AAEDS,EAAAA,iBAAiB,GAAG;AAAA,UACVJ,QADU,GACG,KAAKF,KADR,CACVE,QADU;AAGlB,UAAMK,MAAM,GAAG,IAAIC,SAAJ,CAAcN,QAAd,CAAf;;AAEAK,IAAAA,MAAM,CAACE,SAAP,GAAmBC,GAAG,IAAI;AACxB,WAAKC,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAES,GAAG,CAACE;AAAhB,OAAd;AACD,KAFD;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKb,KAD5C;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWE,OADX,eACWA,OADX;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAAA,UAC4BC,MAD5B,eAC4BA,MAD5B;AAEP,UAAMO,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWd,QAAX,CAAb;AACA,UAAMe,MAAM,GAAGJ,IAAI,CAAC,QAAD,CAAnB;AAEAT,IAAAA,OAAO,CAACa,MAAD,CAAP,GAAkBJ,IAAI,CAAC,MAAD,CAAtB;AACAR,IAAAA,MAAM,CAACY,MAAD,CAAN,GAAiBJ,IAAI,CAAC,GAAD,CAArB;AACAP,IAAAA,MAAM,CAACW,MAAD,CAAN,GAAiBJ,IAAI,CAAC,IAAD,CAArB;AAEA,UAAMK,IAAI,GAAG,QAAb;AAGA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAI,CACN;AAACC,QAAAA,CAAC,EAAEf,OAAO,CAACc,IAAD,CAAX;AACCE,QAAAA,UAAU,EAAE,KADb;AAECC,QAAAA,IAAI,EAAE;AAFP,OADM,CADV;AAME,MAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE,IAAR;AACAC,QAAAA,MAAM,EAAE,GADR;AAEAC,QAAAA,QAAQ,EAAE,IAFV;AAGAC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAER,IADD;AAELS,UAAAA,IAAI,EAAE;AACJC,YAAAA,KAAK,EAAE;AADH;AAFD,SAHP;AASAC,QAAAA,MAAM,EAAE;AACEC,UAAAA,CAAC,EAAE,EADL;AAEEC,UAAAA,CAAC,EAAE,EAFL;AAGEC,UAAAA,CAAC,EAAE,EAHL;AAIEC,UAAAA,CAAC,EAAE;AAJL,SATR;AAeAC,QAAAA,aAAa,EAAE,OAff;AAgBAC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,OADJ;AAELC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAEjC,MAAM,CAACa,IAAD,CADX;AAELO,YAAAA,KAAK,EAAE,EAFF;AAGLc,YAAAA,SAAS,EAAC;AACRX,cAAAA,KAAK,EAAE;AADC,aAHL;AAMLY,YAAAA,QAAQ,EAAE;AACRZ,cAAAA,KAAK,EAAE;AADC;AANL,WAFF;AAYLa,UAAAA,KAAK,EAAE;AACLhB,YAAAA,KAAK,EAAE,EADF;AAELc,YAAAA,SAAS,EAAC;AACRX,cAAAA,KAAK,EAAE;AADC,aAFL;AAKLY,YAAAA,QAAQ,EAAE;AACRZ,cAAAA,KAAK,EAAE;AADC;AALL,WAZF;AAqBLc,UAAAA,KAAK,EAAE;AACLjB,YAAAA,KAAK,EAAE,EADF;AAELc,YAAAA,SAAS,EAAC;AACRX,cAAAA,KAAK,EAAE;AADC,aAFL;AAKLY,YAAAA,QAAQ,EAAE;AACRZ,cAAAA,KAAK,EAAE;AADC;AALL;AArBF;AAhBP,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADA,CADF;AA+DD;;AA9GyB;;AAkH5B,eAAenC,GAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const tickers = ['XBTUSD'];\n    var plots = {}\n    var ticks = {}\n    var tvals = {}\n\n    for(var i = 0; i < tickers.length; i++){\n      plots[tickers[i]] = [];\n      ticks[tickers[i]] = [];\n      tvals[tickers[i]] = [];\n    }\n\n    this.state = {\n      response: false,\n      endpoint: \"ws://localhost:5678\",\n      plotter: plots,\n      xticks: ticks,\n      tickvl: tvals,\n    };\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n\n    const socket = new WebSocket(endpoint);\n\n    socket.onmessage = evt => {\n      this.setState({ response: evt.data });\n    }\n\n  }\n\n  render() {\n    const { response, plotter, xticks, tickvl } = this.state;\n    const data = JSON.parse(response);\n    const symbol = data['Symbol']\n\n    plotter[symbol] = data['Data']\n    xticks[symbol] = data['X']\n    tickvl[symbol] = data['TV']\n\n    const XBTA = \"XBTUSD\";\n\n\n    return (\n      <Fragment>\n      <tr>\n        <td>\n          <Plot\n            data = {[\n              {z: plotter[XBTA],\n               colorscale: 'Jet',\n               type: 'surface'}\n            ]}\n            layout={{width: 1350,\n                    height: 800,\n                    autosize: true,\n                    title: {\n                      text: XBTA,\n                      font: {\n                        color: '#bcbd22'\n                      }\n                    },\n                    margin: {\n                              l: 65,\n                              r: 50,\n                              b: 65,\n                              t: 90,\n                    },\n                    paper_bgcolor: 'black',\n                    scene: {\n                      bgcolor: 'black',\n                      xaxis: {\n                        ticktext: xticks[XBTA],\n                        title: '',\n                        titlefont:{\n                          color: 'black'\n                        },\n                        tickfont: {\n                          color: '#bcbd22'\n                        }\n                      },\n                      yaxis: {\n                        title: '',\n                        titlefont:{\n                          color: 'black'\n                        },\n                        tickfont: {\n                          color: '#bcbd22'\n                        }\n                      },\n                      zaxis: {\n                        title: '',\n                        titlefont:{\n                          color: 'black'\n                        },\n                        tickfont: {\n                          color: '#bcbd22'\n                        }\n                      },\n                    }}}\n          />\n        </td>\n      </tr>\n      </Fragment>\n    );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}